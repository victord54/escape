@startuml
package Escape {

  package Monde {
    abstract class ElementMonde {
      # double x
      # double y
      # double hauteur
      # double largeur
      ..Constructeur..
      + Monde()

    }
    abstract class Terrain {
      ..Constructeur..
      + Terrain(double x, double y, double hauteur, double largeur)
      ..Méthodes..
      + boolean estTraversable()

    }

    class Mur {
      ..Constructeur..
      + Mur(double x, double y, double hauteur, double largeur)
      ..Méthodes..
      + boolean estTraversable()
    }


    abstract class Personnage {
      # double vitesse
      ..Constructeur..
      + Personnage(double x, double y, double largeur, double hauteur, double vitesse)
      ..Méthodes..
      + void déplacer(TypeMouvement typeMouvement)
      + boolean estUnHeros()
    }

    enum TypeMouvement{
        RIGHT
        LEFT
        TOP
        DOWN
    }

    class Heros {
      ..Constructeur..
      + Heros(double x, double y, double largeur, double hauteur, double vitesse)
      ..Méthodes..
      + boolean estUnHeros()
    }

    abstract class Monstre {
      ..Constructeur..
      + Monstre(double x, double y, double largeur, double hauteur, double vitesse)
    }

    class Walker {
      ..Constructeur..
      + Walker(double x, double y, double largeur, double hauteur, double vitesse)
    }

    class Monde {
      # int nbLigne
      # int nbCol
      ..Constructeur..
      + Monde()
      ..Méthodes..
      + boolean collision(ElementMonde e1, ElementMonde e2)
      + Heros getHeros()
      + void deplacementHeros(TypeMouvement typeMouvement)
      + void deplacementMonstres()
      + void addTerrains(Terrain t)
      + void addPersonnage(Personnage p)
      + void updateData()
      + void chargerCarte(String carte)
    }
  }

  package Outils {
    class Donnees {
      + {static} String GAME_TITLE
      + {static} int WINDOW_DEFAULT_HEIGHT
      + {static} int WINDOW_DEFAULT_WIDTH
      + {static} int WORLD_HEIGHT
      + {static} int WORLD_WIDTH
      ...
    }

    class GestionFichier {
      ..Constructeur..
      + GestionFichier()
      ..Méthodes..
      + char[] lireFichierCarte(string nomFichier)
    }

    class Resources {
      - {static} Map<String, Image> assets
      ..Méthodes..
      + {static} URL get(String path)
      + {static} InputStream getAsStream(String path)}
      + {static} Image getAsset(String path)
    }
  }

  package gui {
    class Sprite
  }

  package engine {
    abstract class GameController {
    }
  }
}

note "Voir diagramme <i>class-gui</i> pour en savoir plus\nsur ces packages et les classes qu'ils contiennent." as N_gui
N_gui .. engine
N_gui .. gui


' force layout
Resources -[hidden]up-> GestionFichier
GestionFichier -[hidden]up-> Donnees
engine -[hidden]right-> gui


GameController -- "1" Escape.Monde.Monde
Personnage -up-|> ElementMonde
Heros -up-|> Personnage
Monstre -up-|> Personnage
Walker -up-|> Monstre

Terrain -up-|> ElementMonde
Mur -up-|> Terrain


Escape.Monde.Monde -- "*" Personnage
Escape.Monde.Monde -- "*" Terrain

Escape.Monde.Monde -- "1" GestionFichier

ElementMonde --"*" Escape.gui.Sprite

@enduml
