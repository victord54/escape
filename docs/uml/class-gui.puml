@startuml

package engine {
    abstract class GameController {
        # Monde monde
        --
        + {abstract} update(long): void
        + getHeight(): int
        + getWidth(): int
    }

    abstract class Engine {
        + Engine(ui, controller)
        + {abstract} start(): void
        + {abstract} stop(): void
        + {abstract} tick(long): void
    }

    interface GameInterface {
        + render(): void
    }
}

package cli {
    class CLIController {
        + start(): void
        + stop(): void
        + update(long): void
    }

    class CLIEngine {
        + start(): void
        + stop(): void
        + tick(long): void
    }

    class CLI {
        + render(): void
    }
}

package gui {
    abstract class View {
        # Parent root
        --
        + getRoot(): Parent
        + enableRootEvents(): void
        + onViewInit(): void
        + onViewDisplayed(Object...): void
        + onKeyPressed(KeyEvent): void
        + onKeyReleased(KeyEvent): void
    }

    abstract class ViewController {
        + {abstract} applyLanguage(): void
    }

    enum VIEWS {
        HOME
        GAME
        SETTINGS
        SAVES
    }

    class ViewManager {
        - {static} instance: ViewManager
        - stage: Stage
        --
        - ViewManager()
        + {static} getInstance(): ViewManager
        + setStage(Stage): void
        + registerView(VIEWS, View): void
        + navigateTo(VIEWS, Object...): void
        + quit(): void
    }

    package views {
        class HomeViewController {
            + applyLanguage(): void
            - onClickStart(): void
            - onClickSettings(): void
            - onClickQuit(): void
        }

        class GameViewController {
            - pane: StackPane
            - canvas: Canvas
            - overlay: Canvas
            --
            + applyLanguage(): void
            + getPane(): StackPane
            + getGameBoard(): Canvas
            + getOverlay(): Canvas
        }

        class SettingsViewController {
            - fullScreenCheckBox: CheckBox
            - languageComboBox: ComboBox
            --
            + applyLanguage(): void
            + getLanguageComboBox(): ComboBox
            + setFullScreenCheckBox(boolean): void
            - onFullScreenToggle(): void
            - onClickBack(): void
        }

        class SavesViewController {
            - savesListView: ListView<SaveData>
            - savesList: ObservableList<SaveData>
            --
            + applyLanguage(): void
            + setSaves(ObservableList<SaveData>): void
        }

        class HomeView {
            + HomeView()
            + onViewDisplayed(Object...): void
            + onKeyPressed(KeyEvent): void
        }

        class GameView {
            + GameView()
            + onViewDisplayed(Object...): void
            + render(): void
            + save(boolean): void
            + quit(): void
            + resume(): void
            - drawGameBoard(Canvas, double): void
            - drawOverlay(Canvas): void
            - clearCanvas(Canvas): void
        }

        class SettingsView {
            + SettingsView()
            + onViewInit(): void
            + onViewDisplayed(Object...): void
        }

        class SavesView {
            + SavesView()
            + onViewDisplayed(Object...): void
        }

        class SaveComponent {
            + updateItem(SaveData, boolean): void
            - load(ActionEvent): void
            - delete(ActionEvent): void
        }
    }

    class Sprite {
        + Sprite(Sprite(String path, double x, double y, double width, double height)
        + Image getSprite()
    }

    package engine {
        class GUIController {
            + onKeyPressed(KeyEvent): void
            + onKeyReleased(KeyEvent): void
            + update(long): void
        }

        class GUIEngine {
            - AnimationTimer timer
            --
            + tick(long): void
            + start(): void
            + stop(): void
            + getComputedFPS(): int
            + getFPS(): int
        }
    }
}

' engine
Engine -left-"1" GameInterface : # ui
Engine -right-"1" GameController : # controller

' cli
CLIController -down-|> GameController
CLIEngine -down-|> Engine
CLI .down.|> GameInterface
CLI -right-"1" CLIController : - controller
CLI -right-"1" CLIEngine : - engine

' gui
GUIController -up-|> GameController
GUIEngine -up-|> Engine
GameView .up.|> GameInterface
GameView --"1" GUIController : - controller
GameView --"1" GUIEngine : - engine
GUIEngine -down[hidden]- GUIController

View -left-"1" ViewController : # controller
ViewManager -left-"*" View : - views

' gui views
HomeViewController -up-|> ViewController
HomeView -up-|> View
GameViewController -up-|> ViewController
GameView -up-|> View
SettingsViewController -up-|> ViewController
SettingsView -up-|> View
SavesViewController -up-|> ViewController
SavesView -up-|> View

Sprite -- "1" javafx.scene.image.Image

@enduml
