@startuml
package Escape {

  package Monde {
    abstract class ElementMonde {
      # double x
      # double y
      # double hauteur
      # double largeur
      ..Constructeur..
      + ElementMonde(double x, double y, double hauteur, double largeur)
      ..Méthodes..
      + double getX()
      + void setX(double x)
      + double getY()
      + void setY(double y)
      + double getHauteur()
      + double getLargeur()
      + String toString()

    }
    abstract class Terrain {
      ..Constructeur..
      + Terrain(double x, double y, double hauteur, double largeur)
      ..Méthodes..
      + boolean estTraversable()

    }

    class Mur {
      ..Constructeur..
      + Mur(double x, double y, double hauteur, double largeur)
      ..Méthodes..
      + boolean estTraversable()
    }

    class Piege extends Terrain {
        - double degats
        ..Constructeur..
        + Piege(double x, double y, double hauteur, double largeur)
    }

    abstract class Objet extends ElementMonde {
        ..Constructeur..
        + Objet(double x, double y, double hauteur, double largeur)
        ..Méthodes..
        + boolean estCoeur()
    }

    class Coeur extends Objet {
        # double valeur;
        ..Constructeur..
        + Coeur(double x, double y, double hauteur, double largeur)
        ..Méthodes..
        + boolean estCoeur()
    }


    abstract class Personnage {
      # double vitesse
      - int id
      # double coeurs
      - double degats
      ..Constructeur..
      + Personnage(double x, double y, double largeur, double hauteur, double vitesse)
      + Personnage(double x, double y, double hauteur, double largeur, double vitesse, int id)
      ..Méthodes..
      + void deplacer(TypeMouvement typeMouvement, double deltaTime)
      + boolean estUnHeros()
      + String toString()
      + void coeursGagne(double c)
      + void coeursPerdu(double c)
    }

    enum TypeMouvement{
        RIGHT
        LEFT
        UP
        DOWN
    }

    class Heros {
      ..Constructeur..
      + Heros(double x, double y, double largeur, double hauteur)
      ..Méthodes..
      + boolean estUnHeros()
    }

    abstract class Monstre {
      ..Constructeur..
      + Monstre(double x, double y, double hauteur, double largeur, double vitesse)
      + Monstre(double x, double y, double largeur, double hauteur, double vitesse, int id)
    }

    class Walker {
      ..Constructeur..
      + Walker(double x, double y, double hauteur, double largeur)
      + Walker(double x, double y, double hauteur, double largeur, double vitesse, int id)
    }

    class Monde {
      ..Constructeur..
      + Monde()
      ..Méthodes..
      + void chargerCarte(String carte)
      + boolean collision(ElementMonde e1, ElementMonde e2)
      + void addTerrains(Terrain t)
      + void addPersonnage(Personnage p)
      + void deplacementHeros(TypeMouvement typeMouvement, double deltaTime)
      + Heros getHeros()
      + ArrayList<Personnage> getPersonnages()
      + ArrayList<Terrain> getTerrains()
      + boolean collisionAvec(Personnage pers, boolean checkAvecHeros)
      + {static} int intLePlusProche(int value, int multiple)
      + void deplacementMonstres()
      + Graph<Point2D, DefaultEdge> grapheAlternatif(Monstre m, int pas)
      + boolean collisionAvecTerrains(Personnage p)
      + void deplacementMonstres(double deltaTime)
      + void heroCollisionAvecObjet()
    }
  }

  package Outils {
    class Donnees {
      + {static} int WINDOW_DEFAULT_HEIGHT
      + {static} int WINDOW_DEFAULT_WIDTH
      + {static} int WORLD_HEIGHT
      + {static} int WORLD_WIDTH
      ...
    }

    class GestionFichier {
      ..Constructeur..
      + GestionFichier()
      ..Méthodes..
      + {static} char[][] lireFichierCarte(String nomCarte)
    }

    class Resources {
      - {static} Map<String, Image> assets
      ..Constructeur..
      - Resources()
      ..Méthodes..
      + {static} URL get(String path)
      + {static} InputStream getAsStream(String path)
      + {static} Image getAsset(String path)
      + {static} ResourceBundle getI18NBundle(Locale locale)
      + {static} ResourceBundle getI18NBundle()
      + {static} String getI18NString(String key, Locale locale)
      + {static} String getI18NString(String key)
    }

    class FabriqueId {
        - {static} FabriqueId instance
        - int id
        ..Constructeur..
        - FabriqueId()
        ..Méthodes..
        + {static} FabriqueId getInstance()
        + int getId()
    }
  }

  package gui {
    class Sprite
  }

  package engine {
    abstract class GameController {
    }
  }

  class Settings {
    - {static} PropertyChangeSupport pcs
    + {static} Property<Boolean> fullScreen
    + {static} Property<Boolean> showFps
    + {static} Property<Locale> locale
    ..Méthodes..
    + {static} void forceApply()
  }

  class "Property <T> " as Property {
    - T value
    - String name
    - Map<MyPropertyChangeListener<T>, PropertyChangeListener> listeners
    - PropertyChangeSupport pcs
    - boolean log
    ..Constructeur..
    + Property(PropertyChangeSupport, String, T, Getter<T>, Setter<T>)
    + Property(T, Getter<T>, Setter<T>)
    + Property(PropertyChangeSupport, String, T)
    + Property(T)
    ..Méthodes..
    + T get()
    + void set(T)
    + void subscribe(MyPropertyChangeListener<T>)
    + void unsubscribe(MyPropertyChangeListener<T>)
    + void unsubscribeAll()
    + void forceFire()
    + Property<T> setLog(boolean)
    - void fire(T)
    - void log(String)
  }

  interface "Getter <T> " as Getter {
    T get(T)
  }

  interface "Setter <T> " as Setter {
    T set(T)
  }
}

note "Voir diagramme <i>class-gui</i> pour en savoir plus\nsur ces packages et les classes qu'ils contiennent." as N_gui
N_gui .. engine
N_gui .. gui


' force layout
Resources -[hidden]up-> GestionFichier
GestionFichier -[hidden]up-> Donnees
engine -[hidden]right-> gui


GameController -- "1" Escape.Monde.Monde
Personnage -up-|> ElementMonde
Heros -up-|> Personnage
Monstre -up-|> Personnage
Walker -up-|> Monstre

Terrain -up-|> ElementMonde
Mur -up-|> Terrain


Escape.Monde.Monde -- "*" Personnage
Escape.Monde.Monde -- "*" Terrain
Escape.Monde.Monde -- "*" Objet

Escape.Monde.Monde -- "1" GestionFichier

ElementMonde --"*" Escape.gui.Sprite

' settings
Settings -- Property
Property --"1" Getter
Property --"1" Setter


@enduml
