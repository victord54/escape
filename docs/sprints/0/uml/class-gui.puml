@startuml

package gui {
    abstract class View {
        # Parent root
        --
        + getRoot(): Parent
        + enableRootEvents(): void
        + onViewInit(): void
        + onViewDisplayed(): void
        + onKeyPressed(KeyEvent): void
        + onKeyReleased(KeyEvent): void
    }

    abstract class ViewController {}

    enum VIEWS {
        HOME,
        GAME
    }

    class ViewManager {
        - {static} instance: ViewManager
        - stage: Stage
        --
        - ViewManager()
        + {static} getInstance(): ViewManager
        + setStage(Stage): void
        + registerView(VIEWS, View): void
        + navigateTo(VIEWS): void
        + setFullScreen(boolean): void
    }

    package views {
        class HomeViewController {
            - gameTitle: String
            - fullScreenCheckBox: CheckBox
            --
            # onButtonClick(): void
            # onFullScreenToggle(): void
            + setGameTitle(String): void
            + setFullScreenCheckBox(boolean): void
        }

        class GameViewController {
            - canvas: Canvas
            --
            + getCanvas(): Canvas
        }

        class HomeView {
            - gameTitle: String
            --
            + HomeView(String)
            + onViewInit(ViewController): void
            + onKeyPressed(ViewController, KeyEvent): void
        }

        class GameView {
            + GameView()
            + onViewDisplayed(ViewController): void
            - draw(Canvas, Number): void
        }
    }
}

View --"1" ViewController : # controller
ViewManager --"*" View : - views

HomeViewController -up-|> ViewController
HomeView -up-|> View
GameViewController -up-|> ViewController
GameView -up-|> View

@enduml
