@startuml

package Escape{

  package Monde {
    abstract class ElementMonde {
      # float x
      # float y
      # int hauteur
      # int largeur
      ..Constructeur..
      + Monde()

    }
    abstract class Terrain {
      ..Constructeur..
      + Terrain(float x, float y, int hauteur, int largeur)
      ..Méthodes..
      + boolean estTraversable()

    }

    class Mur {
      ..Constructeur..
      + Mur(float x, float y, int hauteur, int largeur)
      ..Méthodes..
      + boolean estTraversable()
    }

    class Sol{
    ..Constructeur..
    + Sol(float x, float y, int hauteur, int largeur)
    }


    abstract class Personnage {
      # float vitesse
      ..Constructeur..
      + Personnage(int x, int y, int largeur, int hauteur, int vitesse)
      ..Méthodes..
      + déplacer(string typeMouvement)
    }

    class Heros {
      ..Constructeur..
      + Heros(int x, int y, int largeur, int hauteur, int vitesse)
    }

    abstract class Monstre {
      ..Constructeur..
      + Monstre(int x, int y, int largeur, int hauteur, int vitesse)
    }

    class Walker{
      ..Constructeur..
      + Walker(int x, int y, int largeur, int hauteur, int vitesse)
    }

    class Monde{
      # int nbLigne
      # int nbCol
      ..Constructeur..
      + Monde()
      ..Méthodes..
      + boolean collision(ElementMonde e1, ElementMonde e2)
      + void gestionCollisions()
    }
  }

  class Escape {
    ..Constructeur..
    + Escape()
  }

  package Outils {
    class GestionFichier {
        ..Constructeur..
        + GestionFichier()
        ..Méthodes..
        + char[] lireFichierCarte(string nomFichier)
    }
  }
}

Escape.Escape -- "1" Escape.Monde.Monde
Personnage -left-|> ElementMonde
Heros -up-|> Personnage
Monstre -up-|> Personnage
Walker -up-|> Monstre

Terrain -right-|> ElementMonde
Mur -up-|> Terrain
Sol -up-|> Terrain


Escape.Monde.Monde -- "*" Personnage
Escape.Monde.Monde -- "*" Terrain


Escape.Monde.Monde -- "1" GestionFichier

@enduml
